{"ast":null,"code":"var _jsxFileName = \"/Users/pooja/lambda/Spring Projects/expensetracker/expenseapp/src/components/Profile/signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport authService from \"../../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = props => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [validPassword, setValidPassword] = useState(false);\n  const [validEmail, setValidEmail] = useState(false);\n  const navigate = useNavigate();\n\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    validatePassword(event);\n    setPasswordValue(event);\n  };\n\n  const validatePassword = event => {\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{8,}$/;\n\n    if (passwordRegex.test(event.target.value)) {\n      setValidPassword(true);\n    } else {\n      setValidPassword(false);\n    }\n  };\n\n  const setPasswordValue = event => {\n    setPassword(event.target.value);\n  };\n\n  const handleEmailChange = event => {};\n\n  const validateEmail = event => {\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  };\n\n  const successful = username => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [username, \" successfully registered!!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const requestBody = {\n      \"username\": username,\n      \"password\": password,\n      \"email\": email\n    };\n    axios.post('/auth/signup', requestBody).then(response => {\n      console.log(response.data);\n      successful(response.data.username);\n      navigate('/login');\n    }).catch(error => {\n      // console.log('Error: ' + error.toJSON())\n      console.log(error.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signup, \"LQXF0GGqpaakVLqAp+GyBzeCHwQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","axios","authService","Signup","props","username","setUsername","password","setPassword","email","setEmail","validPassword","setValidPassword","validEmail","setValidEmail","navigate","handleUsernameChange","event","target","value","handlePasswordChange","validatePassword","setPasswordValue","passwordRegex","test","handleEmailChange","validateEmail","emailRegex","successful","handleFormSubmit","preventDefault","requestBody","post","then","response","console","log","data","catch","error","message"],"sources":["/Users/pooja/lambda/Spring Projects/expensetracker/expenseapp/src/components/Profile/signup.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport axios from \"axios\";\nimport authService from \"../../services/auth.service\";\n\nconst Signup = (props) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [validPassword, setValidPassword] = useState(false);\n    const [validEmail, setValidEmail] = useState(false);\n    const navigate = useNavigate();\n\n    const handleUsernameChange = (event) => {\n        setUsername(event.target.value);\n    }\n\n    const handlePasswordChange = (event) => {\n        validatePassword(event);\n        setPasswordValue(event);\n    }\n\n    const validatePassword = (event) => {\n        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{8,}$/;\n\n        if(passwordRegex.test(event.target.value)) {\n            setValidPassword(true)\n        } else {\n            setValidPassword(false);\n        }\n\n    }\n\n    const setPasswordValue = (event) => {\n        setPassword(event.target.value);\n    }\n\n    const handleEmailChange = (event) => {\n\n    }\n\n    const validateEmail = (event) => {\n        const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        \n    }\n\n\n    const successful = (username) => {\n        return (\n            <div>\n                <h3>{username} successfully registered!!</h3>\n            </div>\n        )\n    }\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n        const requestBody = {\n            \"username\": username,\n            \"password\": password,\n            \"email\": email\n        }\n\n        axios.post('/auth/signup', requestBody).then(response => {\n            console.log(response.data);\n            successful(response.data.username);\n            navigate('/login');\n        }).catch(error => {\n            // console.log('Error: ' + error.toJSON())\n            console.log(error.message);\n        })\n    }\n\n    return (\n        <div>\n\n        </div>\n    )\n}\n\nexport default Signup;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,KAAD,CAAlD;EACA,MAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAMgB,QAAQ,GAAGf,WAAW,EAA5B;;EAEA,MAAMgB,oBAAoB,GAAIC,KAAD,IAAW;IACpCX,WAAW,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;EACH,CAFD;;EAIA,MAAMC,oBAAoB,GAAIH,KAAD,IAAW;IACpCI,gBAAgB,CAACJ,KAAD,CAAhB;IACAK,gBAAgB,CAACL,KAAD,CAAhB;EACH,CAHD;;EAKA,MAAMI,gBAAgB,GAAIJ,KAAD,IAAW;IAChC,MAAMM,aAAa,GAAG,wEAAtB;;IAEA,IAAGA,aAAa,CAACC,IAAd,CAAmBP,KAAK,CAACC,MAAN,CAAaC,KAAhC,CAAH,EAA2C;MACvCP,gBAAgB,CAAC,IAAD,CAAhB;IACH,CAFD,MAEO;MACHA,gBAAgB,CAAC,KAAD,CAAhB;IACH;EAEJ,CATD;;EAWA,MAAMU,gBAAgB,GAAIL,KAAD,IAAW;IAChCT,WAAW,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;EACH,CAFD;;EAIA,MAAMM,iBAAiB,GAAIR,KAAD,IAAW,CAEpC,CAFD;;EAIA,MAAMS,aAAa,GAAIT,KAAD,IAAW;IAC7B,MAAMU,UAAU,GAAG,uJAAnB;EAEH,CAHD;;EAMA,MAAMC,UAAU,GAAIvB,QAAD,IAAc;IAC7B,oBACI;MAAA,uBACI;QAAA,WAAKA,QAAL;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAKH,CAND;;EAQA,MAAMwB,gBAAgB,GAAIZ,KAAD,IAAW;IAChCA,KAAK,CAACa,cAAN;IACA,MAAMC,WAAW,GAAG;MAChB,YAAY1B,QADI;MAEhB,YAAYE,QAFI;MAGhB,SAASE;IAHO,CAApB;IAMAR,KAAK,CAAC+B,IAAN,CAAW,cAAX,EAA2BD,WAA3B,EAAwCE,IAAxC,CAA6CC,QAAQ,IAAI;MACrDC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;MACAT,UAAU,CAACM,QAAQ,CAACG,IAAT,CAAchC,QAAf,CAAV;MACAU,QAAQ,CAAC,QAAD,CAAR;IACH,CAJD,EAIGuB,KAJH,CAISC,KAAK,IAAI;MACd;MACAJ,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACC,OAAlB;IACH,CAPD;EAQH,CAhBD;;EAkBA,oBACI;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAzED;;GAAMrC,M;UAMeH,W;;;KANfG,M;AA2EN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}