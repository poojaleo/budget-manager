{"ast":null,"code":"var _jsxFileName = \"/Users/pooja/lambda/Spring Projects/expensetracker/expenseapp/src/components/Profile/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button, FormGroup, Input, Label, FormFeedback, FormText } from \"reactstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport authService from \"../../services/auth.service\";\nimport axios from 'axios';\nimport \"./login.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css'; //const baseURL = \"http://localhost:8080/api/auth\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [validPassword, setValidPassword] = useState(false);\n  const navigate = useNavigate();\n\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(this.target.value);\n  };\n\n  const validatePassword = event => {\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{8,}$/;\n\n    if (passwordRegex.test(event.target.value())) {\n      setValidPassword(true);\n    } else {\n      setValidPassword(false);\n    }\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const requestBody = {\n      \"username\": username,\n      \"password\": password\n    };\n    axios.post('/auth/signin', requestBody).then(response => {\n      console.log(response.data);\n      authService.setUserSession(username, response.data.jwtToken);\n      props.authenticate();\n      navigate('/profile');\n    }).catch(error => {\n      // console.log('Error: ' + error.toJSON())\n      console.log(error.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signin\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form\",\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"username\",\n            id: \"username\",\n            value: username,\n            onChange: handleUsernameChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            value: password,\n            valid: validPassword,\n            invalid: validPassword,\n            onChange: event => {\n              validatePassword(event);\n              handlePasswordChange(event);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n            children: \"Uh oh! Looks like there is an issue with your password.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n            valid: true,\n            children: \"That's a tasty looking password you've got there.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(FormText, {\n            children: \"Your password needs to be blah blah.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Login, \"c2MA3mz5kMbLfe3zhEuZQquZKAM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Form","Button","FormGroup","Input","Label","FormFeedback","FormText","useNavigate","authService","axios","Login","props","username","setUsername","password","setPassword","validPassword","setValidPassword","navigate","handleUsernameChange","event","target","value","handlePasswordChange","validatePassword","passwordRegex","test","handleFormSubmit","preventDefault","requestBody","post","then","response","console","log","data","setUserSession","jwtToken","authenticate","catch","error","message"],"sources":["/Users/pooja/lambda/Spring Projects/expensetracker/expenseapp/src/components/Profile/login.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport {Form, Button, FormGroup, Input, Label, FormFeedback, FormText} from \"reactstrap\";\nimport {useNavigate} from \"react-router-dom\";\nimport authService from \"../../services/auth.service\";\nimport axios from 'axios';\nimport \"./login.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//const baseURL = \"http://localhost:8080/api/auth\";\n\nconst Login = (props) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [validPassword, setValidPassword] = useState(false);\n    const navigate = useNavigate();\n\n    const handleUsernameChange = (event) => {\n        setUsername(event.target.value);\n    }\n\n    const handlePasswordChange = (event) => {\n        setPassword(this.target.value);\n    }\n\n    const validatePassword = (event) => {\n        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{8,}$/;\n\n        if(passwordRegex.test(event.target.value())) {\n            setValidPassword(true)\n        } else {\n            setValidPassword(false);\n        }\n\n    }\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n        const requestBody = {\n            \"username\": username,\n            \"password\": password\n        }\n\n        axios.post('/auth/signin', requestBody).then(response => {\n            console.log(response.data);\n            authService.setUserSession(username, response.data.jwtToken);\n            props.authenticate();\n            navigate('/profile');\n        }).catch(error => {\n           // console.log('Error: ' + error.toJSON())\n            console.log(error.message);\n        })\n    }\n\n    return (\n\n           <div>\n               <div className={\"signin\"}>\n                   <h4>Login</h4>\n                   <Form className={\"form\"} onSubmit={handleFormSubmit}>\n                       <FormGroup>\n                           <Label htmlFor={\"username\"}>Username</Label>\n                           <Input type={\"text\"} name={\"username\"} id={\"username\"} value={username}\n                           onChange={handleUsernameChange}/>\n                       </FormGroup>\n                       <FormGroup>\n                           <Label htmlFor={\"password\"}>Password</Label>\n                           <Input type={\"password\"} name={\"password\"} id={\"password\"} value={password}\n                           valid={validPassword}\n                           invalid={validPassword}\n                           onChange={event => {\n                               validatePassword(event);\n                               handlePasswordChange(event);\n                           }}\n                           />\n                           <FormFeedback>\n                               Uh oh! Looks like there is an issue with your password.\n                           </FormFeedback>\n                           <FormFeedback valid>\n                               That's a tasty looking password you've got there.\n                           </FormFeedback>\n                           <FormText>Your password needs to be blah blah.</FormText>\n                       </FormGroup>\n                       <Button>Login</Button>\n                   </Form>\n                   {/*<Form onSubmit={handleFormSubmit} ref={c => {form = c;}}>\n                       <div className={\"form-text\"}>\n                           <label htmlFor={\"username\"}>Username: </label>\n                           <Input type={\"text\"} className={\"form-control\"} name={\"username\"} value={username}\n                                  onChange={event => setUsername(event.target.value)}\n                           validations={[required]} />\n                       </div>\n                       <div className={\"form-text\"}>\n                           <label htmlFor={\"password\"}>Password: </label>\n                           <Input type={\"password\"} className={\"form-control\"} name={\"password\"} value={password}\n                                  onChange={event => setPassword(event.target.value)}\n                                  validations={[required]} />\n                       </div>\n                       <div className={\"form-text\"}>\n                           <button className={\"btn btn-primary\"}>\n                               <span>Login</span>\n                           </button>\n                       </div>\n                   </Form>*/}\n           </div>\n\n        </div>\n\n    )\n\n}\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}